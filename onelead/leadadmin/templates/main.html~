{% extends "adminbase.html" %}

{% block formcontent %}

<script>
require(["dojo/parser", "dijit/form/Form", "dijit/form/Button", "dijit/form/ValidationTextBox", "dijit/form/DateTextBox"]);
</script>

<script>
require(["dojo/parser", "dojo/ready", "dojox/calendar/Calendar","dojo/store/Observable", "dojo/store/Memory"],
function(parser, ready, Calendar,Observable,Memory){
	ready(function(){
		var someData = [
	{
		id: 0,
		summary: "Event 1",
		startTime: new Date(2012, 0, 1, 10, 0),
		endTime: new Date(2012, 0, 1, 12, 0)
	},
	{
		id: 0,
		summary: "Event 1",
		startTime: new Date(2012, 0, 2, 10, 0),
		endTime: new Date(2012, 0, 2, 12, 0)
	}
	];

	calendar = new Calendar({
		date: new Date(),
		store: new Observable(new Memory({data: someData})),
		dateInterval: "week",
		props:"matrixViewProps:{expandDuration:0,refStartTime:12.00}",
		style: "position:relative;width:500px;height:500px"
	}, "calender");
	
	
	id=0;
	var createItem = function(view, d, e, subColumn){
	  // create item by maintaining control key
		if(!e.ctrlKey || e.shiftKey || e.altKey){
			return;
		}
		var start, end;
		var colView = calendar.columnView;
		var cal = calendar.dateModule;
		if(view == colView){
			start = calendar.floorDate(d, "minute", colView.timeSlotDuration);
			end = cal.add(start, "minute", colView.timeSlotDuration);
		}else{
			start = calendar.floorToDay(d);
			end = cal.add(start, "day", 1);
		}
		var item = {
			id: id,
			summary: "New event " + id,
			startTime: start,
			endTime: end,
			allDay: view.viewKind == "matrix"
		};
		id++;
		
		return item;
	}
	calendar.set("createOnGridClick", true);
	calendar.set("createItemFunc", createItem);
	
	
	

	}
)}
);
</script>
	
<table>
	<tr>
		<td>
			<div id=calender>
			</div>
		</td>
		<td>
			<div data-dojo-type="dijit/form/Form" id="myForm" data-dojo-id="myForm"
			encType="multipart/form-data" action="" method="">
				<script type="dojo/on" data-dojo-event="reset">
					return confirm('Press OK to reset widget values');
				</script>

				<script type="dojo/on" data-dojo-event="submit">
					if(this.validate()){
						return confirm('Form is valid, press OK to submit');
					}else{
						alert('Form contains invalid data.  Please correct first');
						return false;
					}
					return true;
				</script>

				<table style="border: 1px solid #9f9f9f;" cellspacing="10">
					<tr>
						<td>
						    <label for="name">Name:</label>
						</td>
						<td>
						    <input type="text" id="name" name="name" required="true" data-dojo-type="dijit/form/ValidationTextBox"/>
						</td>
					</tr>
					<tr>
						<td>
						    <label for="dob">Date of birth:</label>
						</td>
						<td>
						    <input type="text" id="dob" name="dob" data-dojo-type="dijit/form/DateTextBox"/>
						</td>
					</tr>
				</table>

				<button data-dojo-type="dijit/form/Button" type="button" onClick="console.log(myForm.getValues())">Get Values from form!</button>
				<button data-dojo-type="dijit/form/Button" type="submit" name="submitButton" value="Submit">Submit</button>
				<button data-dojo-type="dijit/form/Button" type="reset">Reset</button>
			</div>
		</td>
	</tr>
</table>
	
	


{% endblock %}
